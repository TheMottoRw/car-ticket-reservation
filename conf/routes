# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Default path will just redirect to the computer list
GET         /                                   controllers.ViewController.index()
GET         /login                       controllers.ViewController.login()
GET         /signup                       controllers.ViewController.signup()
GET         /companies                       controllers.ViewController.companies()
GET         /company                       controllers.ViewController.companyAdd()
GET         /company/:id                       controllers.ViewController.companyUpdate(id:String)
GET         /destination                       controllers.ViewController.destinationAdd()
GET         /destination/:id                       controllers.ViewController.destinationUpdate(id:String)
GET         /destinations                       controllers.ViewController.destinations()
GET         /station                       controllers.ViewController.stationAdd()
GET         /station/:id                       controllers.ViewController.stationUpdate(id:String)
GET         /stations                       controllers.ViewController.stations()
GET         /schedule                       controllers.ViewController.scheduleAdd()
GET         /schedule/:id                       controllers.ViewController.scheduleUpdate(id:String)
GET         /schedules                       controllers.ViewController.schedules()
GET         /driver                       controllers.ViewController.driverAdd()
GET         /driver/:id                       controllers.ViewController.driverUpdate(id:String)
GET         /drivers                       controllers.ViewController.drivers()
GET         /reservations/:scheduleId                       controllers.ViewController.reservations(scheduleId:String)

# API Routes
POST        /api/user                           controllers.Users.save(request:Request)
GET         /api/users                          controllers.Users.find(request:Request)
GET         /api/user/:id                       controllers.Users.findById(request:Request,id:String)
GET         /api/users/type                       controllers.Users.findByType(request:Request)
POST        /api/user/:id                       controllers.Users.update(request:Request,id:String)
POST        /api/login                          controllers.Users.login(request:Request)
POST        /api/user/:id/delete                controllers.Users.delete(request:Request,id:String)
POST        /api/user/:id/lock                  controllers.Users.lock(request:Request,id:String)
POST        /api/user/:id/unlock                controllers.Users.unlock(request:Request,id:String)
POST        /api/user/:id/verify                controllers.Users.verifyAccount(request:Request,id:String)
POST        /api/user/forgot/password           controllers.Users.forgotPassword(request:Request)
POST        /api/user/verify/code               controllers.Users.verifyResetCode(request:Request)
POST        /api/user/resend/code               controllers.Users.forgotPassword(request:Request)
POST        /api/user/reset/password            controllers.Users.resetPassword(request:Request)
POST        /api/user/:id/changepassword        controllers.Users.updatePassword(request:Request,id: Integer)

GET         /api/companies                   controllers.Users.findByType(request:Request)

POST        /api/destination                    controllers.Destinations.save(request:Request)
GET         /api/destinations                   controllers.Destinations.find(request:Request)
GET         /api/destination/:id                controllers.Destinations.findById(request:Request,id:String)
POST        /api/destination/:id                controllers.Destinations.update(request:Request,id:String)
POST        /api/destination/:id/delete                controllers.Destinations.delete(request:Request,id:String)

GET         /api/destination/:id/stations                controllers.Stations.findStationsByDestination(request:Request,id:String)
POST        /api/station                        controllers.Stations.save(request:Request)
GET         /api/stations                       controllers.Stations.find(request:Request)
GET         /api/stations/hierarchy/:destinationId                       controllers.Stations.findStationsHierarchy(request:Request,destinationId:String)
GET         /api/station/:id                    controllers.Stations.findById(request:Request,id:String)
POST        /api/station/:id                    controllers.Stations.update(request:Request,id:String)
POST        /api/station/:id/delete                controllers.Stations.delete(request:Request,id:String)

POST        /api/schedule                        controllers.Schedules.save(request:Request)
GET         /api/schedules                       controllers.Schedules.find(request:Request)
GET         /api/schedules/upcoming                       controllers.Schedules.findUpcoming(request:Request)
GET         /api/schedules/driver/upcoming                    controllers.Schedules.findUpcomingByDriver(request:Request)
GET         /api/schedules/driver/history                    controllers.Schedules.findHistoryByDriver(request:Request)
GET         /api/schedule/:id                    controllers.Schedules.findById(request:Request,id:String)
POST        /api/schedule/:id                    controllers.Schedules.update(request:Request,id:String)
POST        /api/schedule/:id/delete                    controllers.Schedules.delete(request:Request,id:String)

POST        /api/reserve                        controllers.Reservations.save(request:Request)
GET         /api/reservations                       controllers.Reservations.find(request:Request)
GET         /api/reservation/:id                    controllers.Reservations.findById(request:Request,id:String)
GET         /api/schedule/:id/reservations                    controllers.Reservations.findBySchedule(request:Request,id:String)
POST        /api/reservation/:id/cancel                    controllers.Reservations.cancel(request:Request,id:String)
# Map static resources from the /public folder to the /assets URL path
GET         /static/*file                       controllers.Assets.at(path="/public", file)

